<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.noesis.pt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client" elementType="Argument">
            <stringProp name="Argument.name">client</stringProp>
            <stringProp name="Argument.value">firefox</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">www.noesis.pt</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Noesis_Home" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-182" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client</stringProp>
                    <stringProp name="Argument.value">${client}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="q" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">q</stringProp>
                    <stringProp name="Argument.value">no</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/complete/search</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-183" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-190" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">stats.g.doubleclick.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/j/collect?t=dc&amp;aip=1&amp;_r=3&amp;v=1&amp;_v=j101&amp;tid=UA-1099183-1&amp;cid=1149045539.1681847512&amp;jid=1226159740&amp;gjid=102642648&amp;_gid=749334198.1689265442&amp;_u=AACAAEAAAAAAACAAI~&amp;z=54385605</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-189" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">js-eu1.hs-banner.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/cf-location</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-192" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/player_api</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-196" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="controls" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">controls</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="rel" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rel</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="disablekb" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">disablekb</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="showinfo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">showinfo</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="modestbranding" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">modestbranding</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="html5" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">html5</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="iv_load_policy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">iv_load_policy</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="imageQuality" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">imageQuality</stringProp>
                    <stringProp name="Argument.value">hqdefault</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="enablejsapi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">enablejsapi</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="widgetid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetid</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/embed/ur4Hx3PK40Y</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-197" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="controls" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">controls</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rel" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rel</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="disablekb" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">disablekb</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="showinfo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">showinfo</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="modestbranding" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">modestbranding</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="html5" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">html5</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="iv_load_policy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">iv_load_policy</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="imageQuality" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">imageQuality</stringProp>
                    <stringProp name="Argument.value">hqdefault</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="enablejsapi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">enablejsapi</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="widgetid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetid</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/embed/ur4Hx3PK40Y</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-198" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="controls" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">controls</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rel" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rel</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="disablekb" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">disablekb</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="showinfo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">showinfo</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="modestbranding" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">modestbranding</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="html5" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">html5</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="iv_load_policy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">iv_load_policy</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="imageQuality" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">imageQuality</stringProp>
                    <stringProp name="Argument.value">hqdefault</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="enablejsapi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">enablejsapi</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="widgetid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetid</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/embed/Fzdpq8mzsLc</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-194" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="portalId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">portalId</stringProp>
                    <stringProp name="Argument.value">26756071</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="utk" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">utk</stringProp>
                    <stringProp name="Argument.value">89f56b2d4925caa27d156ac1dede5252</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">forms-eu1.hscollectedforms.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/collected-forms/v1/config/json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-195" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="portalId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">portalId</stringProp>
                    <stringProp name="Argument.value">26756071</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api-eu1.hubapi.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/hs-script-loader-public/v1/config/pixels-and-events/json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-201" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fBBc4.woff2</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">identity</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-203" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="random" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">random</stringProp>
                    <stringProp name="Argument.value">1689265658190</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cv</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fst</stringProp>
                    <stringProp name="Argument.value">1689265658190</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bg" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">bg</stringProp>
                    <stringProp name="Argument.value">ffffff</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="guid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">guid</stringProp>
                    <stringProp name="Argument.value">ON</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="async" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">async</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gtm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gtm</stringProp>
                    <stringProp name="Argument.value">45be37a0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="u_w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u_w</stringProp>
                    <stringProp name="Argument.value">2049</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="u_h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u_h</stringProp>
                    <stringProp name="Argument.value">1152</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="url" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">url</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="hn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hn</stringProp>
                    <stringProp name="Argument.value">www.googleadservices.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="frm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">frm</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tiba" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">tiba</stringProp>
                    <stringProp name="Argument.value">Noesis | Helping Your Business Grow Faster</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="did" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">did</stringProp>
                    <stringProp name="Argument.value">dZTQ1Zm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gdid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gdid</stringProp>
                    <stringProp name="Argument.value">dZTQ1Zm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="auid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">auid</stringProp>
                    <stringProp name="Argument.value">802265532.1681847512</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">data</stringProp>
                    <stringProp name="Argument.value">event=gtag.config</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rfmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rfmt</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fmt</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">googleads.g.doubleclick.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pagead/viewthroughconversion/693877029/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-204" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">googleads.g.doubleclick.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pagead/id</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-205" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">googleads.g.doubleclick.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pagead/id</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-206" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">googleads.g.doubleclick.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pagead/id</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-207" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fmt</stringProp>
                    <stringProp name="Argument.value">js</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="pid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pid</stringProp>
                    <stringProp name="Argument.value">60433</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="time" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">time</stringProp>
                    <stringProp name="Argument.value">1689265658312</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="url" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">url</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">px.ads.linkedin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/collect</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-209" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="random" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">random</stringProp>
                    <stringProp name="Argument.value">1689265658190</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cv</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fst</stringProp>
                    <stringProp name="Argument.value">1689264000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bg" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">bg</stringProp>
                    <stringProp name="Argument.value">ffffff</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="guid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">guid</stringProp>
                    <stringProp name="Argument.value">ON</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="async" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">async</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gtm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gtm</stringProp>
                    <stringProp name="Argument.value">45be37a0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="u_w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u_w</stringProp>
                    <stringProp name="Argument.value">2049</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="u_h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u_h</stringProp>
                    <stringProp name="Argument.value">1152</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="url" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">url</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="frm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">frm</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tiba" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">tiba</stringProp>
                    <stringProp name="Argument.value">Noesis | Helping Your Business Grow Faster</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">data</stringProp>
                    <stringProp name="Argument.value">event=gtag.config</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fmt</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="is_vtc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">is_vtc</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="random" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">random</stringProp>
                    <stringProp name="Argument.value">3440618910</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rmt_tld" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rmt_tld</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ipr" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ipr</stringProp>
                    <stringProp name="Argument.value">y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pagead/1p-user-list/693877029/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-210" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="random" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">random</stringProp>
                    <stringProp name="Argument.value">1689265658190</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cv</stringProp>
                    <stringProp name="Argument.value">11</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fst</stringProp>
                    <stringProp name="Argument.value">1689264000000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="bg" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">bg</stringProp>
                    <stringProp name="Argument.value">ffffff</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="guid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">guid</stringProp>
                    <stringProp name="Argument.value">ON</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="async" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">async</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gtm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gtm</stringProp>
                    <stringProp name="Argument.value">45be37a0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="u_w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u_w</stringProp>
                    <stringProp name="Argument.value">2049</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="u_h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u_h</stringProp>
                    <stringProp name="Argument.value">1152</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="url" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">url</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="frm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">frm</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tiba" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">tiba</stringProp>
                    <stringProp name="Argument.value">Noesis | Helping Your Business Grow Faster</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="data" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">data</stringProp>
                    <stringProp name="Argument.value">event=gtag.config</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fmt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fmt</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="is_vtc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">is_vtc</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="random" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">random</stringProp>
                    <stringProp name="Argument.value">3440618910</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rmt_tld" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rmt_tld</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ipr" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ipr</stringProp>
                    <stringProp name="Argument.value">y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.google.com.br</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pagead/1p-user-list/693877029/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-212" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="Argument.value">187383988460663</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ev" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ev</stringProp>
                    <stringProp name="Argument.value">PageView</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dl</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rl</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="if" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">if</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ts</stringProp>
                    <stringProp name="Argument.value">1689265658886</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sw" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sw</stringProp>
                    <stringProp name="Argument.value">2049</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sh" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sh</stringProp>
                    <stringProp name="Argument.value">1152</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ud[external_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ud[external_id]</stringProp>
                    <stringProp name="Argument.value">89f56b2d4925caa27d156ac1dede5252</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">2.9.111</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="r" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">r</stringProp>
                    <stringProp name="Argument.value">stable</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="a" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">a</stringProp>
                    <stringProp name="Argument.value">tmhubspot</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ec" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ec</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="o" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">o</stringProp>
                    <stringProp name="Argument.value">28</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fbp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fbp</stringProp>
                    <stringProp name="Argument.value">fb.1.1681847515189.583069969</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cs_est" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cs_est</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="it" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">it</stringProp>
                    <stringProp name="Argument.value">1689265658870</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="coo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">coo</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="rqm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rqm</stringProp>
                    <stringProp name="Argument.value">GET</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.facebook.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/tr/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-208" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="portalId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">portalId</stringProp>
                    <stringProp name="Argument.value">26756071</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="currentUrl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">currentUrl</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="utk" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">utk</stringProp>
                    <stringProp name="Argument.value">89f56b2d4925caa27d156ac1dede5252</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="__hstc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__hstc</stringProp>
                    <stringProp name="Argument.value">263078163.89f56b2d4925caa27d156ac1dede5252.1681847513685.1681847513685.1689265482998.2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="__hssc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__hssc</stringProp>
                    <stringProp name="Argument.value">263078163.1.1689265482998</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">cta-eu1.hubspot.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/web-interactives/public/v1/embed/combinedConfigs</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-215" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;O43z0dpjhgX20SCx4KAo&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">jnn-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.waa.v1.Waa/Create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-216" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;O43z0dpjhgX20SCx4KAo&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">jnn-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.waa.v1.Waa/Create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-217" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;O43z0dpjhgX20SCx4KAo&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">jnn-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.waa.v1.Waa/Create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-218" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="__RvXQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__RvXQ</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/generate_204</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-213" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="portalId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">portalId</stringProp>
                    <stringProp name="Argument.value">26756071</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="utk" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">utk</stringProp>
                    <stringProp name="Argument.value">89f56b2d4925caa27d156ac1dede5252</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="__hstc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__hstc</stringProp>
                    <stringProp name="Argument.value">263078163.89f56b2d4925caa27d156ac1dede5252.1681847513685.1681847513685.1689265482998.2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="__hssc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__hssc</stringProp>
                    <stringProp name="Argument.value">263078163.2.1689265482998</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="currentUrl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">currentUrl</stringProp>
                    <stringProp name="Argument.value">${scheme}://${host}/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">forms-eu1.hubspot.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/lead-flows-config/v1/config/json</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${host}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-219" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="b8cMAg" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">b8cMAg</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/generate_204</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-221" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="WFY8ng" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">WFY8ng</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/generate_204</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-220" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;O43z0dpjhgX20SCx4KAo&quot;,&quot;$zVI5Ug9RAAYHvV5hJ73eW6-MD0WsUkunADkAIwj8Rky6-Z2g8-Gcv3ltR4wl6jA0C2Wqy_rOoWXK_Dl_QyUKF5REXVCjwrxsTMc5AIEg91yp-TyeAAAAHc4AAAAC9AEHlgGOz9pTtIu9vSw7OhaSK9AsLkZNZ260Hc18KRnHVj0ooT34c2GMvUmhoBItcvesYkojnW9fhYtmIDUTdbf4wGGJKSYmq9DyxvuRmWVi7I1b0_kza6tMc4-NKRMmHR1XAizXcKMcB8yeiqTSyWA5MHUsqOE_PtZmVcb0z5igfE7aEdJ1CrwM2ghlFdJu068L10WYrqTFiEfuC2kCoFmSvXkXaYrRc1--8qxNM5DAexXsvGaeTYvmABFh2WzdV0Lp68suOQmr5sZbBEfjNX9kLxv2Xw4vB5QFoPA9PDY-0r1kIWGiUdXLAnzrupVsKwVhEEvsIoQTLIG0sFMx7uVcJMbr2AYyI3rQvvWsRo5Kgmn9E4aVylLvhUe44--J3FCEQrsMNCc03TafrC0pJrNfy4IvkFsCANZxYvgoy0TRRhxKC0SEDh3DCGKXTLGX0NlhXGq5bI14SZiLEPMX-HEL0kDSP6kPrzaf5oBBIEQi0C5AG2nPO-Z9VeqsIC6uvTBAmFnycLhmQxMoPfBa1X98fzwFAVI9VAvPqxELFUPM9m3Yj7T1zIN0PKq_ryvogv-NIdNM0Y_2iBFTGQU12YVsBZuV7wGfK-twtGD5RY4DLXA4JxYpdAzrkm7BG8gjkX9GOfx74oVRFLeSRZGVJ6GxEBsiZpgJJodgZ-lMfvLhkHljsFS24wh1NWchuG1g6VD2e1PryCoxwIhvCb78obeuarfFVrPvgCZH-m6nEVf4SH20v1M4-t4daH7iIydWtth2HTmhYjafSPITgQEtuSg73Q8q0nXhqLuA1glWm8cQaOWyAsnoivsXs0hisPQ3UIun4i2QdmTQ19GjEs7Vx1qdH2ZPwEFsC9SFaAOlSAXcKLS71FWtQg_fP4yCds539oP3M1aYsDvRTxjntII3lgYyH3iJM4WBq-30PdoCLPoXE2NPRxVQ8qCvAIAhN2VEId7c0ZFAXJCf9w4EMdMOlUAB2PDM4qHa-g&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">jnn-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.waa.v1.Waa/GenerateIT</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-223" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">push.services.mozilla.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                    <stringProp name="Header.value">push-notification</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                    <stringProp name="Header.value">permessage-deflate</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">wss://push.services.mozilla.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">xet1mP9vBMmFDdHIUPk6rw==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-222" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;O43z0dpjhgX20SCx4KAo&quot;,&quot;$0U45ThNRAAar0NMSi9DeFVGFWK5xDD2nADkAIwj8RtaAvi5FwgGDCLkYsiue9QWxDuvRVxiQXCXGcS4IBnuxnxBnu5CpQ6EQbK5i7wcXBdEs9yGeAAAAG84AAAAB9AEHlgGf9gNSJGYMMGlyguxwJ0oMhbaZdYJwJ8K-jY0fl7CrSwoU3NxTvjn837hntjLkiKkfq7TyNdE3aIFwMViAcpadPi7hoAtZuX8GEaG-EM5N6p7A24pppCZHTRVzYA77-XzL7uLrOIpBDnSIGJcWlek7bqLzeytW7JU_Q-Fdn-78QimdW3wfldjq8ZiZIiLG1ziRnHyfCiQvyF1oGQYknUn96hQywZgSLTu6bVNxRAWyAMvPgbmvx3_TXdYS3Mc7pxqPR2hTXBNjKK8qEHCIv2Cpg8O3Kas5a0ABaPwvJNM1RssQvuVb_YG-3a6hzKtl2fSdWES900ZshghXMFHh0wjGpedOZJM68Nso5EnWH48EtJM7W3aJUWh-db-j2iDm29JBwFH3_nx4IPQHCBRX_QB0tnmzlMI4CgxwDzLwyL1EX8BjoJydSLGl4gBF61T0jw7dyuOggHK1XCBBdUJbeFEOm12HGOm3mTp3D1YPXX-uP2kweHWXH54HxBncYhDV75l2XiOmvwpZsD5QGfQb0_0DDapBXuwTwhUPfhI03z4ivwUBPEbXpW7gWKaTw10PwN-TloOMfkhdinetJygtO8j9Gw6OjXc0aNdXdXuOcO5lPm9ndY5oXiIsDXATtidFjOJlWRDQ-pA_xXU0vWf1Tu-N00oU7E3CV6flP9Olkxh_yssvkXXijLdmacJJJxxYubyk_Kcglbls0LZ1yGS3JGaNcd9BpAw6_hT71VuhBE3J_mMtKn7Pm9ku5CmDSQMMo3uZjkgts3NoJNo-7qvPgmZTJtbUat8JWsM_4LZ16czLgKD6ucaY3LVdU6LIm3t9DzadBmOAATXax59obAU1jWefs48xSR5tTv7pW1eHr7FjaS3Y9kfI2SMCVe5cPU8oTUORl0Cx6S_dOXMaNJyER6hsWZUyGbr1ewwzTLPAbdj6FlXbo35spLa6mE15WN6-FsYYO21pWPTYYruTC2Tchdc&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">jnn-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.waa.v1.Waa/GenerateIT</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-224" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;O43z0dpjhgX20SCx4KAo&quot;,&quot;$BZo5msdRAAYHvV5hJ73eujgY9S6lpESnADkAIwj8Rsv0mkyhZXw7rpzrmhulomzUeiyriDn5eRzG1tX_w2K8qyHX2MZ2z-sBW5m6PERA_rzQCH2eAAAAHM4AAAAB9AEHlgIWiDcwNA7YYJQA9j_1I5cUxrcJYcXAJ_Jf8esyLo04oO0HGjT-J-RPw_tiETQhg1Yx2brvBzy8Lw1R-dUy382NcYy_s6OdRJ1SeJy5WyC6VaW8bk_h2uRPieBKXJ_1Ffy0znODLEXmWy3Dtrw5NGAuxI0jWZAnt0Jgy81_XEHzNY9nS4jglMapGaCAznf5Tuh6VjlizJv8oTqmnQYqGjdieonD6bonjUGxkhXuiEpDYYZ2x2saGZ6-ZCG5UrdDrddst_DX1WhliyX7hag2tfTf2IW22Px1i7q3fGwMbEV6jyxaSmVmKRn7tZD83JA9oKsiLfOurBTe0koDjRkMIKeCmtqXmr2Tnn6EaS4muQrzDrfo2cAX35wTHACFuXwAStYXz6vYM5a2A3IDCUUxBE-NyOV7yBFdW0V4HNchX2ZIuIJpG3c9G2TdynIIfVpbJkLf0XUoBuXbEfiD-tLitw3ilc8zB9WKPo-JkxRJbhK1Q-pTcePcC323VUtRPLVWXSjzWsKgFJQ7qeK_E_njNWwwpwUyDbVk3EchHqxgD3HVKm-fd5l7w8XCcEuPP-LxgR50Hx1o3A5fugCVMzWYQstG805qGtAw5AphMa30HOxBFCaYZ54PQkwwAMInP3u1BeBBegevZLrGjk6nLkjRynq53pZmrCXcK0jzoTpRefHKWSbgRiTtZj9v_jjmLZYq6Ufu0psP17QdBQFMXmLk6lca6KTQChxjWvNyRzzUqneB8Ut7tFzEBZr-feyG-teclyw4PkJpG5fCu_OPXuE_gTu1QTKtwy5t9-au_FEfu-Sbkum1xFugR7kuOM9CNILNyMJOs8gwiY5dMbCkexr8Z45gBHCaJsuQQ3ATNhHqGbAXqrzTgW-sPX0EJlYJcLfZmzHLKcIMtJq2FSz6U2GZaIKItudi4F5khy_26eKa1JLtpCmo7KIaj0oU4wqlnhZQACYAz8zyW3VfKBsqu4KH9LWqljnk1f9oAzp0kQdWDGBoS618uc3MQEoZhy5vTyD9ot7_Fcb5jDlDJLj3Rv3q7qQwYj-stkoiSl4-EhsqEUPbgeF-feveTL55slEDWCezfu1Iv5_orXASYOsTrYNDASi96-XXGBwTDYMQzhuOMjEqK3gLjxkiWqZLffk1qHJFMujnkuHCUuo&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">jnn-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.waa.v1.Waa/GenerateIT</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-227" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CKfKwKUGEKXC_hIQ8qivBRDetq8FEOrDrwUQksuvBRDnuq8FEIvLrwUQrLevBRC4i64FEI_DrwUQpZmvBRCpxK8FEIS2rwUQ_rWvBRC9tq4FEMyu_hIQs8mvBRCMt68FEOC2rwUQ3M-vBRDrk64FEOSz_hIQzLf-EhCWzq8FEMzfrgUQos2vBRD4ta8FEMO3_hIQqrL-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265637353,&quot;finalPayload&quot;:{&quot;csn&quot;:&quot;MC44MTE2MDQyMTQxNzc4NDA5&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;190840&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;JyWwZK__EZ6b4dUP5o29gA0&quot;,&quot;clientCounter&quot;:&quot;6158&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660027</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658252&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrXTlbkO2sN0bNTKrzVpXhoxp0ce4YeJQCJX8fzapR0YbMF9FZ4hX5Vy8XX9esfI8uOuLNEtv29BAPeTiSMZDUJMMQPrQ</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-226" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CKfKwKUGEMyu_hIQzN-uBRClma8FEKqy_hIQksuvBRClwv4SELPJrwUQ-LWvBRC9tq4FEKnErwUQ57qvBRDMt_4SEIvLrwUQ5LP-EhDyqK8FEOrDrwUQos2vBRDetq8FEIS2rwUQ_rWvBRCst68FEOC2rwUQ65OuBRCMt68FEI_DrwUQuIuuBRDcz68FEMO3_hIQls6vBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265637354,&quot;finalPayload&quot;:{&quot;csn&quot;:&quot;MC41MzE1MDAzNzg3NzQ3NzY1&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;190744&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;JyWwZLOCEofCxQSRm7L4Aw&quot;,&quot;clientCounter&quot;:&quot;13450&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660024</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658241&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKp2I4m9jbl6unw8AQXAUC4lssCHuzp07gSJBkQZW36PA85pahi-T4KvjvsJ_3rsg6adtNcaOTlNd4NBYyc2x1Zz4BY0oA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-225" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CKfKwKUGEL22rgUQpcL-EhD4ta8FEKy3rwUQs8mvBRCPw68FEMyu_hIQ4LavBRCpxK8FEMzfrgUQ8qivBRCEtq8FEKWZrwUQqrL-EhDetq8FEJbOrwUQ5LP-EhC4i64FEJLLrwUQi8uvBRCiza8FENzPrwUQ6sOvBRCMt68FEOe6rwUQw7f-EhDrk64FEP61rwUQzLf-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265596876,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;aa&quot;,&quot;clientActionNonce&quot;:&quot;s9T1894xJ3S6lY0P&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;150163&quot;}},{&quot;eventTimeMs&quot;:1689265596877,&quot;latencyActionInfo&quot;:{&quot;loadType&quot;:&quot;warm&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;150164&quot;}},{&quot;eventTimeMs&quot;:1689265596877,&quot;latencyActionBaselined&quot;:{&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;150164&quot;}},{&quot;eventTimeMs&quot;:1689265596878,&quot;latencyActionInfo&quot;:{&quot;isNavigation&quot;:true,&quot;actionType&quot;:&quot;LATENCY_ACTION_WATCH&quot;,&quot;previousAction&quot;:&quot;LATENCY_ACTION_EMBED&quot;,&quot;httpProtocol&quot;:&quot;HTTP/1.1&quot;,&quot;transportProtocol&quot;:&quot;tcp&quot;,&quot;clientScreenNonce&quot;:&quot;MC42ODE3Mjk4OTE5MzgyODAy&quot;,&quot;isVisible&quot;:true,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;150164&quot;}},{&quot;eventTimeMs&quot;:1689265596878,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;qoes&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;150166&quot;}},{&quot;eventTimeMs&quot;:1689265596878,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vir&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;150166&quot;}},{&quot;eventTimeMs&quot;:1689265596878,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ps_s&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;150166&quot;}},{&quot;eventTimeMs&quot;:1689265596881,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;psns&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;150168&quot;}},{&quot;eventTimeMs&quot;:1689265601413,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;154699&quot;}},{&quot;eventTimeMs&quot;:1689265602994,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;156280&quot;}},{&quot;eventTimeMs&quot;:1689265603246,&quot;clientError&quot;:{&quot;errorMetadata&quot;:{&quot;pageUrl&quot;:&quot;${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3&quot;,&quot;kvPairs&quot;:[{&quot;key&quot;:&quot;client.name&quot;,&quot;value&quot;:&quot;WEB_EMBEDDED_PLAYER&quot;},{&quot;key&quot;:&quot;client.name&quot;,&quot;value&quot;:&quot;56&quot;},{&quot;key&quot;:&quot;client.version&quot;,&quot;value&quot;:&quot;1.20230709.00.00&quot;},{&quot;key&quot;:&quot;client.params.0&quot;,&quot;value&quot;:&quot;/youtubei/v1/player?key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8&amp;prettyPrint=false&quot;},{&quot;key&quot;:&quot;client.params.1&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;key&quot;:&quot;client.params.2&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;client.params.errorServiceSignature&quot;,&quot;value&quot;:&quot;msg=5&amp;cb=1&quot;},{&quot;key&quot;:&quot;client.params.serviceWorker&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;key&quot;:&quot;client.params.fscripts&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;key&quot;:&quot;server.name&quot;,&quot;value&quot;:&quot;WebFE&quot;},{&quot;key&quot;:&quot;server.version&quot;,&quot;value&quot;:&quot;prod&quot;}]},&quot;stackTrace&quot;:{&quot;isObfuscated&quot;:true,&quot;browserStackInfo&quot;:{&quot;stackTrace&quot;:&quot;g.yB@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:2029:60\ndS.prototype.handleResponse@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:9556:106\ndS.prototype.fetch/&lt;/f.onerror@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:9552:197\n&quot;,&quot;filename&quot;:&quot;${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3&quot;}},&quot;logMessage&quot;:{&quot;level&quot;:&quot;ERROR_LEVEL_WARNNING&quot;,&quot;message&quot;:&quot;JSON parsing failed after XHR fetch&quot;,&quot;errorClassName&quot;:&quot;Error&quot;,&quot;sampleWeight&quot;:10}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;156532&quot;}},{&quot;eventTimeMs&quot;:1689265603246,&quot;clientError&quot;:{&quot;errorMetadata&quot;:{&quot;pageUrl&quot;:&quot;${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3&quot;,&quot;kvPairs&quot;:[{&quot;key&quot;:&quot;client.name&quot;,&quot;value&quot;:&quot;WEB_EMBEDDED_PLAYER&quot;},{&quot;key&quot;:&quot;client.name&quot;,&quot;value&quot;:&quot;56&quot;},{&quot;key&quot;:&quot;client.version&quot;,&quot;value&quot;:&quot;1.20230709.00.00&quot;},{&quot;key&quot;:&quot;client.params.0&quot;,&quot;value&quot;:&quot;/youtubei/v1/player?key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8&amp;prettyPrint=false&quot;},{&quot;key&quot;:&quot;client.params.1&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;key&quot;:&quot;client.params.2&quot;,&quot;value&quot;:&quot;&quot;},{&quot;key&quot;:&quot;client.params.errorServiceSignature&quot;,&quot;value&quot;:&quot;msg=5&amp;cb=1&quot;},{&quot;key&quot;:&quot;client.params.serviceWorker&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;key&quot;:&quot;client.params.fscripts&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;key&quot;:&quot;server.name&quot;,&quot;value&quot;:&quot;WebFE&quot;},{&quot;key&quot;:&quot;server.version&quot;,&quot;value&quot;:&quot;prod&quot;}]},&quot;stackTrace&quot;:{&quot;isObfuscated&quot;:true,&quot;browserStackInfo&quot;:{&quot;stackTrace&quot;:&quot;g.yB@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:2029:60\ndS.prototype.handleResponse@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:9556:181\ndS.prototype.fetch/&lt;/f.onerror@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:9552:197\n&quot;,&quot;filename&quot;:&quot;${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3&quot;}},&quot;logMessage&quot;:{&quot;level&quot;:&quot;ERROR_LEVEL_WARNNING&quot;,&quot;message&quot;:&quot;XHR API fetch failed&quot;,&quot;errorClassName&quot;:&quot;Error&quot;,&quot;sampleWeight&quot;:10}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;156533&quot;}},{&quot;eventTimeMs&quot;:1689265603246,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;psnr&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;156533&quot;}},{&quot;eventTimeMs&quot;:1689265606575,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;159862&quot;}},{&quot;eventTimeMs&quot;:1689265608593,&quot;clientError&quot;:{&quot;errorMetadata&quot;:{&quot;pageUrl&quot;:&quot;${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3&quot;,&quot;kvPairs&quot;:[{&quot;key&quot;:&quot;client.name&quot;,&quot;value&quot;:&quot;WEB_EMBEDDED_PLAYER&quot;},{&quot;key&quot;:&quot;client.name&quot;,&quot;value&quot;:&quot;56&quot;},{&quot;key&quot;:&quot;client.version&quot;,&quot;value&quot;:&quot;1.20230709.00.00&quot;},{&quot;key&quot;:&quot;client.params.0.attempt&quot;,&quot;value&quot;:&quot;1&quot;},{&quot;key&quot;:&quot;client.params.errorServiceSignature&quot;,&quot;value&quot;:&quot;msg=5&amp;cb=1&quot;},{&quot;key&quot;:&quot;client.params.serviceWorker&quot;,&quot;value&quot;:&quot;false&quot;},{&quot;key&quot;:&quot;client.params.fscripts&quot;,&quot;value&quot;:&quot;0&quot;},{&quot;key&quot;:&quot;server.name&quot;,&quot;value&quot;:&quot;WebFE&quot;},{&quot;key&quot;:&quot;server.version&quot;,&quot;value&quot;:&quot;prod&quot;}]},&quot;stackTrace&quot;:{&quot;isObfuscated&quot;:true,&quot;browserStackInfo&quot;:{&quot;stackTrace&quot;:&quot;g.yB@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:2029:60\nm1a/&lt;@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:6175:206\nFa@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:145:40\njaa/this.next@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:146:92\nb@${scheme}://www.youtube.com/s/player/4cc5d082/player_ias.vflset/pt_BR/base.js:150:40\n&quot;,&quot;filename&quot;:&quot;${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3&quot;}},&quot;logMessage&quot;:{&quot;level&quot;:&quot;ERROR_LEVEL_WARNNING&quot;,&quot;message&quot;:&quot;Retrying OnePlatform request&quot;,&quot;errorClassName&quot;:&quot;Error&quot;,&quot;sampleWeight&quot;:10}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;161879&quot;}},{&quot;eventTimeMs&quot;:1689265608595,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;psns&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;161881&quot;}},{&quot;eventTimeMs&quot;:1689265613968,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;psnr&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;167255&quot;}},{&quot;eventTimeMs&quot;:1689265619677,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;psns&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;172964&quot;}},{&quot;eventTimeMs&quot;:1689265622240,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;psnr&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;175527&quot;}},{&quot;eventTimeMs&quot;:1689265622241,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;wn_s&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;175528&quot;}},{&quot;eventTimeMs&quot;:1689265622242,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;virc&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;175528&quot;}},{&quot;eventTimeMs&quot;:1689265622244,&quot;embedsVideoDataDidChange&quot;:{&quot;clientPlaybackNonce&quot;:&quot;U5x3-vqDkoeO2M0e&quot;,&quot;isReload&quot;:false,&quot;runtimeEnabledFeatures&quot;:{&quot;isShortsModeEnabled&quot;:false}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;175531&quot;}},{&quot;eventTimeMs&quot;:1689265622245,&quot;html5PlayerHealthEvent&quot;:{&quot;started&quot;:false,&quot;stateAtSend&quot;:&quot;PLAYER_PLAYBACK_STATE_ERROR&quot;,&quot;joinLatencySecs&quot;:25.367,&quot;playTimeSecs&quot;:0,&quot;rebufferTimeSecs&quot;:0,&quot;seekCount&quot;:0,&quot;networkErrorCount&quot;:3,&quot;nonNetworkErrorCount&quot;:0,&quot;playerCanaryType&quot;:&quot;HTML5_PLAYER_CANARY_TYPE_EXPERIMENT&quot;,&quot;isAd&quot;:false,&quot;liveMode&quot;:&quot;LIVE_STREAM_MODE_UNKNOWN&quot;,&quot;hasDrm&quot;:false,&quot;isGapless&quot;:false,&quot;isServerStitchedDai&quot;:false},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;175532&quot;}},{&quot;eventTimeMs&quot;:1689265622276,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC42ODE3Mjk4OTE5MzgyODAy&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:178053,&quot;veCounter&quot;:21}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;175563&quot;}},{&quot;eventTimeMs&quot;:1689265626803,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;wn_r&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;180090&quot;}},{&quot;eventTimeMs&quot;:1689265626806,&quot;embedsVideoDataDidChange&quot;:{&quot;clientPlaybackNonce&quot;:&quot;U5x3-vqDkoeO2M0e&quot;,&quot;isReload&quot;:false,&quot;runtimeEnabledFeatures&quot;:{&quot;isShortsModeEnabled&quot;:false}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;180093&quot;}},{&quot;eventTimeMs&quot;:1689265631773,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;U-Je85fFQq0EZhJs&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;185059&quot;}},{&quot;eventTimeMs&quot;:1689265637357,&quot;finalPayload&quot;:{&quot;csn&quot;:&quot;MC42ODE3Mjk4OTE5MzgyODAy&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;190644&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;JyWwZJGAEuaA-LAPl5G7yAU&quot;,&quot;clientCounter&quot;:&quot;28377&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660014</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658231&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrVsS1wlnVg0xfkmVQp5ole3dP9ehWVJmPSGWnzMmGGpmiGplqOXJZEjW3aoEGZtfm2_BGIFHo4rjDz7iRchMM38GtnnA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-228" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CNvKwKUGEOrDrwUQ_rWvBRDgtq8FEJLLrwUQ65OuBRCPw68FEOe6rwUQjLevBRCqsv4SEKLNrwUQ5LP-EhCLy68FEKXC_hIQ-LWvBRDDt_4SEL22rgUQuIuuBRCWzq8FEMzfrgUQ8qivBRDcz68FEIS2rwUQzK7-EhClma8FEKnErwUQzLf-EhCst68FELPJrwUQ3ravBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://opportunities.noesis.pt/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265634665,&quot;finalPayload&quot;:{&quot;csn&quot;:&quot;MC4wODM4MjU5MDIxMTQ1MjQwMQ..&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;136551&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;WyWwZMvUK5byxwTR7aX4CQ&quot;,&quot;clientCounter&quot;:&quot;27961&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660125</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658231&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrVsS1wlnVg0xfkmVQp5ole3dP9ehWVJmPSGWnzMmGGpmiGplqOXJZEjW3aoEGZtfm2_BGIFHo4rjDz7iRchMM38GtnnA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-230" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CNvKwKUGEOrDrwUQ_rWvBRDgtq8FEJLLrwUQ65OuBRCPw68FEOe6rwUQjLevBRCqsv4SEKLNrwUQ5LP-EhCLy68FEKXC_hIQ-LWvBRDDt_4SEL22rgUQuIuuBRCWzq8FEMzfrgUQ8qivBRDcz68FEIS2rwUQzK7-EhClma8FEKnErwUQzLf-EhCst68FELPJrwUQ3ravBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://opportunities.noesis.pt/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265582274,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;NWQHy2UhFUT4KpmX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;84159&quot;}},{&quot;eventTimeMs&quot;:1689265585445,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;NWQHy2UhFUT4KpmX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;87330&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;WyWwZMvUK5byxwTR7aX4CQ&quot;,&quot;clientCounter&quot;:&quot;27960&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660145</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658241&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKp2I4m9jbl6unw8AQXAUC4lssCHuzp07gSJBkQZW36PA85pahi-T4KvjvsJ_3rsg6adtNcaOTlNd4NBYyc2x1Zz4BY0oA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-229" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CKfKwKUGEMyu_hIQzN-uBRClma8FEKqy_hIQksuvBRClwv4SELPJrwUQ-LWvBRC9tq4FEKnErwUQ57qvBRDMt_4SEIvLrwUQ5LP-EhDyqK8FEOrDrwUQos2vBRDetq8FEIS2rwUQ_rWvBRCst68FEOC2rwUQ65OuBRCMt68FEI_DrwUQuIuuBRDcz68FEMO3_hIQls6vBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265518540,&quot;idbTransactionEnded&quot;:{&quot;objectStoreNames&quot;:&quot;LogsRequestsStore&quot;,&quot;connectionHasUnknownAbortedTransaction&quot;:false,&quot;duration&quot;:9,&quot;isSuccessful&quot;:true,&quot;tryCount&quot;:1,&quot;tag&quot;:&quot;IDB_TRANSACTION_TAG_UNKNOWN&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;71931&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;JyWwZLOCEofCxQSRm7L4Aw&quot;,&quot;clientCounter&quot;:&quot;13449&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660145</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658252&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrXTlbkO2sN0bNTKrzVpXhoxp0ce4YeJQCJX8fzapR0YbMF9FZ4hX5Vy8XX9esfI8uOuLNEtv29BAPeTiSMZDUJMMQPrQ</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-231" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CKfKwKUGEL22rgUQpcL-EhD4ta8FEKy3rwUQs8mvBRCPw68FEMyu_hIQ4LavBRCpxK8FEMzfrgUQ8qivBRCEtq8FEKWZrwUQqrL-EhDetq8FEJbOrwUQ5LP-EhC4i64FEJLLrwUQi8uvBRCiza8FENzPrwUQ6sOvBRCMt68FEOe6rwUQw7f-EhDrk64FEP61rwUQzLf-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265506035,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;s9T1894xJ3S6lY0P&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;59321&quot;}},{&quot;eventTimeMs&quot;:1689265508453,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;s9T1894xJ3S6lY0P&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;61740&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;JyWwZJGAEuaA-LAPl5G7yAU&quot;,&quot;clientCounter&quot;:&quot;28376&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660234</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658231&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrVsS1wlnVg0xfkmVQp5ole3dP9ehWVJmPSGWnzMmGGpmiGplqOXJZEjW3aoEGZtfm2_BGIFHo4rjDz7iRchMM38GtnnA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-232" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CKfKwKUGEMyu_hIQzN-uBRClma8FEKqy_hIQksuvBRClwv4SELPJrwUQ-LWvBRC9tq4FEKnErwUQ57qvBRDMt_4SEIvLrwUQ5LP-EhDyqK8FEOrDrwUQos2vBRDetq8FEIS2rwUQ_rWvBRCst68FEOC2rwUQ65OuBRCMt68FEI_DrwUQuIuuBRDcz68FEMO3_hIQls6vBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265506033,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;zaBZ2i2nIIUCUkPg&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;59423&quot;}},{&quot;eventTimeMs&quot;:1689265508451,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;zaBZ2i2nIIUCUkPg&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;61842&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;JyWwZLOCEofCxQSRm7L4Aw&quot;,&quot;clientCounter&quot;:&quot;13448&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660249</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658241&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKp2I4m9jbl6unw8AQXAUC4lssCHuzp07gSJBkQZW36PA85pahi-T4KvjvsJ_3rsg6adtNcaOTlNd4NBYyc2x1Zz4BY0oA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-233" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CKfKwKUGEKXC_hIQ8qivBRDetq8FEOrDrwUQksuvBRDnuq8FEIvLrwUQrLevBRC4i64FEI_DrwUQpZmvBRCpxK8FEIS2rwUQ_rWvBRC9tq4FEMyu_hIQs8mvBRCMt68FEOC2rwUQ3M-vBRDrk64FEOSz_hIQzLf-EhCWzq8FEMzfrgUQos2vBRD4ta8FEMO3_hIQqrL-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265506031,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;UpCsKC2VuFXedyaI&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;59518&quot;}},{&quot;eventTimeMs&quot;:1689265508451,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;UpCsKC2VuFXedyaI&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;61938&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;JyWwZK__EZ6b4dUP5o29gA0&quot;,&quot;clientCounter&quot;:&quot;6157&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265660265</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658252&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrXTlbkO2sN0bNTKrzVpXhoxp0ce4YeJQCJX8fzapR0YbMF9FZ4hX5Vy8XX9esfI8uOuLNEtv29BAPeTiSMZDUJMMQPrQ</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-236" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEOC2rwUQpcL-EhCSy68FEKWZrwUQvbauBRC4i64FEKy3rwUQos2vBRCpxK8FEP61rwUQ6sOvBRDyqK8FEKqy_hIQs8mvBRDMrv4SEIS2rwUQ57qvBRDetq8FEIy3rwUQ65OuBRD4ta8FEMzfrgUQj8OvBRDcz68FEIvLrwUQw7f-EhCWzq8FEMy3_hIQ5LP-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265658329,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pe&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657475,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;srt&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657471,&quot;latencyActionBaselined&quot;:{&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657475,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nreqs&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657475,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nress&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657965,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nrese&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657974,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pj&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657998,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pj&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657974,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pej&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657992,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pej&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658376,&quot;latencyActionInfo&quot;:{&quot;isNavigation&quot;:true,&quot;actionType&quot;:&quot;LATENCY_ACTION_EMBED&quot;,&quot;httpProtocol&quot;:&quot;HTTP/1.1&quot;,&quot;transportProtocol&quot;:&quot;tcp&quot;,&quot;loadType&quot;:&quot;cold&quot;,&quot;resourceInfo&quot;:[{&quot;resourceCache&quot;:&quot;pj&quot;},{&quot;resourceCache&quot;:&quot;pej&quot;}],&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657975,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658395,&quot;idbTransactionEnded&quot;:{&quot;objectStoreNames&quot;:&quot;databases&quot;,&quot;connectionHasUnknownAbortedTransaction&quot;:false,&quot;duration&quot;:2,&quot;isSuccessful&quot;:true,&quot;tryCount&quot;:1,&quot;tag&quot;:&quot;IDB_TRANSACTION_TAG_UNKNOWN&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658405,&quot;latencyActionInfo&quot;:{&quot;serverTimeMs&quot;:209,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265659439,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_isc&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;3&quot;}},{&quot;eventTimeMs&quot;:1689265659440,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_ist&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;4&quot;}},{&quot;eventTimeMs&quot;:1689265659441,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_csms&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;5&quot;}},{&quot;eventTimeMs&quot;:1689265659442,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_csmf&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6&quot;}},{&quot;eventTimeMs&quot;:1689265659444,&quot;screenCreated&quot;:{&quot;csn&quot;:&quot;MC4wMzI4MDM2MTAyNDk3MTk3OA..&quot;,&quot;pageVe&quot;:{&quot;veType&quot;:16623,&quot;youtubeData&quot;:{&quot;servletData&quot;:{&quot;serializedServletEventId&quot;:&quot;-yWwZOyKM4-d5gT5grTwDg&quot;}}}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;7&quot;}},{&quot;eventTimeMs&quot;:1689265659444,&quot;latencyActionInfo&quot;:{&quot;clientScreenNonce&quot;:&quot;MC4wMzI4MDM2MTAyNDk3MTk3OA..&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;8&quot;}},{&quot;eventTimeMs&quot;:1689265659444,&quot;screenCreated&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;pageVe&quot;:{&quot;veType&quot;:32594},&quot;implicitGesture&quot;:{&quot;parentCsn&quot;:&quot;MC4wMzI4MDM2MTAyNDk3MTk3OA..&quot;,&quot;gesturedVe&quot;:{&quot;veType&quot;:16623},&quot;gestureType&quot;:&quot;INTERACTION_LOGGING_GESTURE_TYPE_AUTOMATED&quot;}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;8&quot;}},{&quot;eventTimeMs&quot;:1689265659444,&quot;visualElementHidden&quot;:{&quot;csn&quot;:&quot;MC4wMzI4MDM2MTAyNDk3MTk3OA..&quot;,&quot;ve&quot;:{&quot;veType&quot;:16623},&quot;eventType&quot;:16},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;8&quot;}},{&quot;eventTimeMs&quot;:1689265659444,&quot;latencyActionInfo&quot;:{&quot;clientScreenNonce&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;8&quot;}},{&quot;eventTimeMs&quot;:1689265659445,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;trackingParams&quot;:&quot;CAAQru4BIhMIxKjc_IyMgAMVUI2mCB2GvQmd&quot;}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;8&quot;}},{&quot;eventTimeMs&quot;:1689265659446,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;fs&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;10&quot;}},{&quot;eventTimeMs&quot;:1689265659451,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28572,&quot;veCounter&quot;:1}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;16&quot;}},{&quot;eventTimeMs&quot;:1689265659452,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ftr&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;17&quot;}},{&quot;eventTimeMs&quot;:1689265659454,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:51663,&quot;veCounter&quot;:2}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;18&quot;}},{&quot;eventTimeMs&quot;:1689265659455,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28240,&quot;veCounter&quot;:3}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;19&quot;}},{&quot;eventTimeMs&quot;:1689265659455,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28239,&quot;veCounter&quot;:4}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;19&quot;}},{&quot;eventTimeMs&quot;:1689265659455,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:28240,&quot;veCounter&quot;:3},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;19&quot;}},{&quot;eventTimeMs&quot;:1689265659455,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:28239,&quot;veCounter&quot;:4},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;20&quot;}},{&quot;eventTimeMs&quot;:1689265659458,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36925,&quot;veCounter&quot;:5}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;22&quot;}},{&quot;eventTimeMs&quot;:1689265659458,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:37220,&quot;veCounter&quot;:6}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;22&quot;}},{&quot;eventTimeMs&quot;:1689265659458,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36927,&quot;veCounter&quot;:7}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;22&quot;}},{&quot;eventTimeMs&quot;:1689265659459,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:23851,&quot;veCounter&quot;:8}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;24&quot;}},{&quot;eventTimeMs&quot;:1689265659460,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28656,&quot;veCounter&quot;:9}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;24&quot;}},{&quot;eventTimeMs&quot;:1689265659460,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:70344,&quot;veCounter&quot;:10}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;25&quot;}},{&quot;eventTimeMs&quot;:1689265659461,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36925,&quot;veCounter&quot;:11}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;26&quot;}},{&quot;eventTimeMs&quot;:1689265659461,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:37220,&quot;veCounter&quot;:12}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;26&quot;}},{&quot;eventTimeMs&quot;:1689265659463,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:164503,&quot;veCounter&quot;:13}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;27&quot;}},{&quot;eventTimeMs&quot;:1689265659463,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28665,&quot;veCounter&quot;:14}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;27&quot;}},{&quot;eventTimeMs&quot;:1689265659463,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28664,&quot;veCounter&quot;:15}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;28&quot;}},{&quot;eventTimeMs&quot;:1689265659464,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:86570,&quot;veCounter&quot;:16}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;28&quot;}},{&quot;eventTimeMs&quot;:1689265659465,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:16499,&quot;veCounter&quot;:17}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;29&quot;}},{&quot;eventTimeMs&quot;:1689265659466,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:23851,&quot;veCounter&quot;:8},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;31&quot;}},{&quot;eventTimeMs&quot;:1689265659466,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:36925,&quot;veCounter&quot;:5},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;31&quot;}},{&quot;eventTimeMs&quot;:1689265659467,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:28664,&quot;veCounter&quot;:15},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;32&quot;}},{&quot;eventTimeMs&quot;:1689265659467,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:28665,&quot;veCounter&quot;:14},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;32&quot;}},{&quot;eventTimeMs&quot;:1689265659533,&quot;latencyActionInfo&quot;:{&quot;clientPlaybackNonce&quot;:&quot;qHDtwUK_l3Ihorvi&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;98&quot;}},{&quot;eventTimeMs&quot;:1689265659535,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:172777,&quot;veCounter&quot;:18}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;100&quot;}},{&quot;eventTimeMs&quot;:1689265659535,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:76758,&quot;veCounter&quot;:19}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;100&quot;}},{&quot;eventTimeMs&quot;:1689265659535,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:76758,&quot;veCounter&quot;:19},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;100&quot;}},{&quot;eventTimeMs&quot;:1689265659536,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:96714,&quot;veCounter&quot;:20}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;100&quot;}},{&quot;eventTimeMs&quot;:1689265659582,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;147&quot;}},{&quot;eventTimeMs&quot;:1689265659589,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ol&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;154&quot;}},{&quot;eventTimeMs&quot;:1689265659589,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ol&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;154&quot;}},{&quot;eventTimeMs&quot;:1689265659589,&quot;foregroundHeartbeatScreenAssociated&quot;:{&quot;clientDocumentNonce&quot;:&quot;Orde5WFG0FQoJruc&quot;,&quot;clientScreenNonce&quot;:&quot;MC4wMzI4MDM2MTAyNDk3MTk3OA..&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;154&quot;}},{&quot;eventTimeMs&quot;:1689265659589,&quot;foregroundHeartbeatScreenAssociated&quot;:{&quot;clientDocumentNonce&quot;:&quot;Orde5WFG0FQoJruc&quot;,&quot;clientScreenNonce&quot;:&quot;MC4wNTI5MzI2MTI1MzcyODM2NQ..&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;154&quot;}},{&quot;eventTimeMs&quot;:1689265659589,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ftl&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;154&quot;}},{&quot;eventTimeMs&quot;:1689265660206,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_if&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;198&quot;}},{&quot;eventTimeMs&quot;:1689265660206,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_cms&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;198&quot;}},{&quot;eventTimeMs&quot;:1689265660208,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_cmf&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;200&quot;}},{&quot;eventTimeMs&quot;:1689265661341,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;1332&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZOyKM4-d5gT5grTwDg&quot;,&quot;clientCounter&quot;:&quot;28369&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265662344</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658241&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKp2I4m9jbl6unw8AQXAUC4lssCHuzp07gSJBkQZW36PA85pahi-T4KvjvsJ_3rsg6adtNcaOTlNd4NBYyc2x1Zz4BY0oA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-235" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEMy3_hIQqcSvBRDcz68FEMO3_hIQrLevBRCPw68FEN62rwUQ_rWvBRCMt68FEPi1rwUQvbauBRDMrv4SEOuTrgUQ8qivBRCqsv4SEMzfrgUQos2vBRClwv4SEOSz_hIQksuvBRDgtq8FELPJrwUQi8uvBRC4i64FEOe6rwUQpZmvBRCEtq8FEJbOrwUQ6sOvBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265658356,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pe&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657481,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;srt&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657473,&quot;latencyActionBaselined&quot;:{&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657480,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nreqs&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657481,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nress&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657983,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nrese&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658011,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pj&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658032,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pj&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658011,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pej&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658033,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pej&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658387,&quot;latencyActionInfo&quot;:{&quot;isNavigation&quot;:true,&quot;actionType&quot;:&quot;LATENCY_ACTION_EMBED&quot;,&quot;httpProtocol&quot;:&quot;HTTP/1.1&quot;,&quot;transportProtocol&quot;:&quot;tcp&quot;,&quot;loadType&quot;:&quot;cold&quot;,&quot;resourceInfo&quot;:[{&quot;resourceCache&quot;:&quot;pj&quot;},{&quot;resourceCache&quot;:&quot;pej&quot;}],&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658015,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658406,&quot;latencyActionInfo&quot;:{&quot;serverTimeMs&quot;:224,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265659484,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_isc&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;7&quot;}},{&quot;eventTimeMs&quot;:1689265659485,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_ist&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;7&quot;}},{&quot;eventTimeMs&quot;:1689265659486,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_csms&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;9&quot;}},{&quot;eventTimeMs&quot;:1689265659487,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_csmf&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;9&quot;}},{&quot;eventTimeMs&quot;:1689265659489,&quot;screenCreated&quot;:{&quot;csn&quot;:&quot;MC42ODA5NTkwOTgxMTEzNzIx&quot;,&quot;pageVe&quot;:{&quot;veType&quot;:16623,&quot;youtubeData&quot;:{&quot;servletData&quot;:{&quot;serializedServletEventId&quot;:&quot;-yWwZKDBM_eb4dUP5L-j4Ac&quot;}}}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659489,&quot;latencyActionInfo&quot;:{&quot;clientScreenNonce&quot;:&quot;MC42ODA5NTkwOTgxMTEzNzIx&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659489,&quot;screenCreated&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;pageVe&quot;:{&quot;veType&quot;:32594},&quot;implicitGesture&quot;:{&quot;parentCsn&quot;:&quot;MC42ODA5NTkwOTgxMTEzNzIx&quot;,&quot;gesturedVe&quot;:{&quot;veType&quot;:16623},&quot;gestureType&quot;:&quot;INTERACTION_LOGGING_GESTURE_TYPE_AUTOMATED&quot;}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659490,&quot;visualElementHidden&quot;:{&quot;csn&quot;:&quot;MC42ODA5NTkwOTgxMTEzNzIx&quot;,&quot;ve&quot;:{&quot;veType&quot;:16623},&quot;eventType&quot;:16},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659490,&quot;latencyActionInfo&quot;:{&quot;clientScreenNonce&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659490,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;trackingParams&quot;:&quot;CAAQru4BIhMI46rd_IyMgAMVUoumCB3ragkj&quot;}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659492,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;fs&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;14&quot;}},{&quot;eventTimeMs&quot;:1689265659501,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28572,&quot;veCounter&quot;:1}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;23&quot;}},{&quot;eventTimeMs&quot;:1689265659503,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ftr&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;25&quot;}},{&quot;eventTimeMs&quot;:1689265659504,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:51663,&quot;veCounter&quot;:2}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;26&quot;}},{&quot;eventTimeMs&quot;:1689265659505,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28240,&quot;veCounter&quot;:3}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;27&quot;}},{&quot;eventTimeMs&quot;:1689265659505,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28239,&quot;veCounter&quot;:4}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;27&quot;}},{&quot;eventTimeMs&quot;:1689265659505,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:28240,&quot;veCounter&quot;:3},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;27&quot;}},{&quot;eventTimeMs&quot;:1689265659505,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:28239,&quot;veCounter&quot;:4},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;27&quot;}},{&quot;eventTimeMs&quot;:1689265659507,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36925,&quot;veCounter&quot;:5}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;28&quot;}},{&quot;eventTimeMs&quot;:1689265659507,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:37220,&quot;veCounter&quot;:6}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;28&quot;}},{&quot;eventTimeMs&quot;:1689265659507,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36927,&quot;veCounter&quot;:7}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;29&quot;}},{&quot;eventTimeMs&quot;:1689265659508,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:23851,&quot;veCounter&quot;:8}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;30&quot;}},{&quot;eventTimeMs&quot;:1689265659509,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28656,&quot;veCounter&quot;:9}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;31&quot;}},{&quot;eventTimeMs&quot;:1689265659510,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:70344,&quot;veCounter&quot;:10}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;32&quot;}},{&quot;eventTimeMs&quot;:1689265659511,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36925,&quot;veCounter&quot;:11}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;32&quot;}},{&quot;eventTimeMs&quot;:1689265659511,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:37220,&quot;veCounter&quot;:12}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;33&quot;}},{&quot;eventTimeMs&quot;:1689265659511,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:164503,&quot;veCounter&quot;:13}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265659511,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28665,&quot;veCounter&quot;:14}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265659512,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28664,&quot;veCounter&quot;:15}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265659512,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:86570,&quot;veCounter&quot;:16}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265659513,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:16499,&quot;veCounter&quot;:17}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;35&quot;}},{&quot;eventTimeMs&quot;:1689265659514,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:23851,&quot;veCounter&quot;:8},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;36&quot;}},{&quot;eventTimeMs&quot;:1689265659514,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:36925,&quot;veCounter&quot;:5},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;36&quot;}},{&quot;eventTimeMs&quot;:1689265659514,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:28664,&quot;veCounter&quot;:15},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;37&quot;}},{&quot;eventTimeMs&quot;:1689265659515,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:28665,&quot;veCounter&quot;:14},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;37&quot;}},{&quot;eventTimeMs&quot;:1689265659536,&quot;latencyActionInfo&quot;:{&quot;clientPlaybackNonce&quot;:&quot;CX_RipsWhAHQ42Yd&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;58&quot;}},{&quot;eventTimeMs&quot;:1689265659538,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:172777,&quot;veCounter&quot;:18}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;60&quot;}},{&quot;eventTimeMs&quot;:1689265659538,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:76758,&quot;veCounter&quot;:19}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;60&quot;}},{&quot;eventTimeMs&quot;:1689265659538,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;ve&quot;:{&quot;veType&quot;:76758,&quot;veCounter&quot;:19},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;60&quot;}},{&quot;eventTimeMs&quot;:1689265659539,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:96714,&quot;veCounter&quot;:20}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;61&quot;}},{&quot;eventTimeMs&quot;:1689265659586,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;109&quot;}},{&quot;eventTimeMs&quot;:1689265659591,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ol&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;112&quot;}},{&quot;eventTimeMs&quot;:1689265659591,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ol&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;113&quot;}},{&quot;eventTimeMs&quot;:1689265659591,&quot;foregroundHeartbeatScreenAssociated&quot;:{&quot;clientDocumentNonce&quot;:&quot;5fC8_57u1ERUPQ4y&quot;,&quot;clientScreenNonce&quot;:&quot;MC42ODA5NTkwOTgxMTEzNzIx&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;113&quot;}},{&quot;eventTimeMs&quot;:1689265659591,&quot;foregroundHeartbeatScreenAssociated&quot;:{&quot;clientDocumentNonce&quot;:&quot;5fC8_57u1ERUPQ4y&quot;,&quot;clientScreenNonce&quot;:&quot;MC40NTAzODQ5MTc0MDI0MjkyNQ..&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;113&quot;}},{&quot;eventTimeMs&quot;:1689265659591,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ftl&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;113&quot;}},{&quot;eventTimeMs&quot;:1689265660253,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_if&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;242&quot;}},{&quot;eventTimeMs&quot;:1689265660253,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_cms&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;242&quot;}},{&quot;eventTimeMs&quot;:1689265660253,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_cmf&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;243&quot;}},{&quot;eventTimeMs&quot;:1689265661341,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;1332&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZKDBM_eb4dUP5L-j4Ac&quot;,&quot;clientCounter&quot;:&quot;8923&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265662346</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658252&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrXTlbkO2sN0bNTKrzVpXhoxp0ce4YeJQCJX8fzapR0YbMF9FZ4hX5Vy8XX9esfI8uOuLNEtv29BAPeTiSMZDUJMMQPrQ</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-234" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEKnErwUQzK7-EhDks_4SEI_DrwUQw7f-EhDMt_4SEIvLrwUQ4LavBRD4ta8FEN62rwUQksuvBRClma8FEKqy_hIQzN-uBRCEtq8FEIy3rwUQls6vBRCzya8FEKLNrwUQ65OuBRC4i64FEPKorwUQvbauBRD-ta8FENzPrwUQrLevBRClwv4SEOe6rwUQ6sOvBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265658296,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pe&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657472,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;srt&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657469,&quot;latencyActionBaselined&quot;:{&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657472,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nreqs&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657472,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nress&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657925,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nrese&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657932,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;wffs&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657957,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;wffe&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657933,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pj&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657955,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pj&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657933,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pej&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657956,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pej&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657932,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pc&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657943,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pc&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658364,&quot;latencyActionInfo&quot;:{&quot;isNavigation&quot;:true,&quot;actionType&quot;:&quot;LATENCY_ACTION_EMBED&quot;,&quot;httpProtocol&quot;:&quot;HTTP/1.1&quot;,&quot;transportProtocol&quot;:&quot;tcp&quot;,&quot;loadType&quot;:&quot;cold&quot;,&quot;resourceInfo&quot;:[{&quot;resourceCache&quot;:&quot;pj&quot;},{&quot;resourceCache&quot;:&quot;pej&quot;},{&quot;resourceCache&quot;:&quot;pc&quot;}],&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265657968,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265658398,&quot;latencyActionInfo&quot;:{&quot;serverTimeMs&quot;:188,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265659385,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_isc&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6&quot;}},{&quot;eventTimeMs&quot;:1689265659385,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_ist&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;7&quot;}},{&quot;eventTimeMs&quot;:1689265659386,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_csms&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;8&quot;}},{&quot;eventTimeMs&quot;:1689265659387,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_csmf&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;9&quot;}},{&quot;eventTimeMs&quot;:1689265659389,&quot;screenCreated&quot;:{&quot;csn&quot;:&quot;MC4wNjMxMDE5MDUzNjgxNTU5Ng..&quot;,&quot;pageVe&quot;:{&quot;veType&quot;:16623,&quot;youtubeData&quot;:{&quot;servletData&quot;:{&quot;serializedServletEventId&quot;:&quot;-yWwZPqKMpDexQTWqpjoDA&quot;}}}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659389,&quot;latencyActionInfo&quot;:{&quot;clientScreenNonce&quot;:&quot;MC4wNjMxMDE5MDUzNjgxNTU5Ng..&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659390,&quot;screenCreated&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;pageVe&quot;:{&quot;veType&quot;:32594},&quot;implicitGesture&quot;:{&quot;parentCsn&quot;:&quot;MC4wNjMxMDE5MDUzNjgxNTU5Ng..&quot;,&quot;gesturedVe&quot;:{&quot;veType&quot;:16623},&quot;gestureType&quot;:&quot;INTERACTION_LOGGING_GESTURE_TYPE_AUTOMATED&quot;}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659390,&quot;visualElementHidden&quot;:{&quot;csn&quot;:&quot;MC4wNjMxMDE5MDUzNjgxNTU5Ng..&quot;,&quot;ve&quot;:{&quot;veType&quot;:16623},&quot;eventType&quot;:16},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659390,&quot;latencyActionInfo&quot;:{&quot;clientScreenNonce&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265659390,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;trackingParams&quot;:&quot;CAAQru4BIhMI5oHc_IyMgAMVXcDCBB2gMQx9&quot;}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;12&quot;}},{&quot;eventTimeMs&quot;:1689265659391,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;fs&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;13&quot;}},{&quot;eventTimeMs&quot;:1689265659412,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28572,&quot;veCounter&quot;:1}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265659413,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ftr&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;35&quot;}},{&quot;eventTimeMs&quot;:1689265659414,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:51663,&quot;veCounter&quot;:2}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;36&quot;}},{&quot;eventTimeMs&quot;:1689265659415,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28240,&quot;veCounter&quot;:3}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;37&quot;}},{&quot;eventTimeMs&quot;:1689265659415,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28239,&quot;veCounter&quot;:4}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;37&quot;}},{&quot;eventTimeMs&quot;:1689265659415,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;ve&quot;:{&quot;veType&quot;:28240,&quot;veCounter&quot;:3},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;37&quot;}},{&quot;eventTimeMs&quot;:1689265659416,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;ve&quot;:{&quot;veType&quot;:28239,&quot;veCounter&quot;:4},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;37&quot;}},{&quot;eventTimeMs&quot;:1689265659417,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36925,&quot;veCounter&quot;:5}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;38&quot;}},{&quot;eventTimeMs&quot;:1689265659417,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:37220,&quot;veCounter&quot;:6}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;38&quot;}},{&quot;eventTimeMs&quot;:1689265659417,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36927,&quot;veCounter&quot;:7}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;39&quot;}},{&quot;eventTimeMs&quot;:1689265659418,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:23851,&quot;veCounter&quot;:8}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;39&quot;}},{&quot;eventTimeMs&quot;:1689265659419,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28656,&quot;veCounter&quot;:9}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;40&quot;}},{&quot;eventTimeMs&quot;:1689265659419,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:70344,&quot;veCounter&quot;:10}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;40&quot;}},{&quot;eventTimeMs&quot;:1689265659420,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36925,&quot;veCounter&quot;:11}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;41&quot;}},{&quot;eventTimeMs&quot;:1689265659420,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:37220,&quot;veCounter&quot;:12}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;41&quot;}},{&quot;eventTimeMs&quot;:1689265659421,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:164503,&quot;veCounter&quot;:13}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;42&quot;}},{&quot;eventTimeMs&quot;:1689265659421,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28665,&quot;veCounter&quot;:14}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;43&quot;}},{&quot;eventTimeMs&quot;:1689265659422,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28664,&quot;veCounter&quot;:15}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;43&quot;}},{&quot;eventTimeMs&quot;:1689265659423,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:86570,&quot;veCounter&quot;:16}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;44&quot;}},{&quot;eventTimeMs&quot;:1689265659424,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:16499,&quot;veCounter&quot;:17}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;45&quot;}},{&quot;eventTimeMs&quot;:1689265659425,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;ve&quot;:{&quot;veType&quot;:23851,&quot;veCounter&quot;:8},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;47&quot;}},{&quot;eventTimeMs&quot;:1689265659425,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;ve&quot;:{&quot;veType&quot;:36925,&quot;veCounter&quot;:5},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;47&quot;}},{&quot;eventTimeMs&quot;:1689265659425,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;ve&quot;:{&quot;veType&quot;:28664,&quot;veCounter&quot;:15},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;47&quot;}},{&quot;eventTimeMs&quot;:1689265659425,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;ve&quot;:{&quot;veType&quot;:28665,&quot;veCounter&quot;:14},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;47&quot;}},{&quot;eventTimeMs&quot;:1689265659525,&quot;latencyActionInfo&quot;:{&quot;clientPlaybackNonce&quot;:&quot;r4YAZywaOP-s0c75&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;147&quot;}},{&quot;eventTimeMs&quot;:1689265659527,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:172777,&quot;veCounter&quot;:18}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;148&quot;}},{&quot;eventTimeMs&quot;:1689265659527,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:76758,&quot;veCounter&quot;:19}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;148&quot;}},{&quot;eventTimeMs&quot;:1689265659528,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;ve&quot;:{&quot;veType&quot;:76758,&quot;veCounter&quot;:19},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;149&quot;}},{&quot;eventTimeMs&quot;:1689265659528,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:96714,&quot;veCounter&quot;:20}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;149&quot;}},{&quot;eventTimeMs&quot;:1689265659575,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ol&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;197&quot;}},{&quot;eventTimeMs&quot;:1689265659575,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ol&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;197&quot;}},{&quot;eventTimeMs&quot;:1689265659582,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;203&quot;}},{&quot;eventTimeMs&quot;:1689265659591,&quot;foregroundHeartbeatScreenAssociated&quot;:{&quot;clientDocumentNonce&quot;:&quot;Ohe6rVGgv7JkdQZD&quot;,&quot;clientScreenNonce&quot;:&quot;MC4wNjMxMDE5MDUzNjgxNTU5Ng..&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;213&quot;}},{&quot;eventTimeMs&quot;:1689265659592,&quot;foregroundHeartbeatScreenAssociated&quot;:{&quot;clientDocumentNonce&quot;:&quot;Ohe6rVGgv7JkdQZD&quot;,&quot;clientScreenNonce&quot;:&quot;MC41MDU5MzgwODczNjc0MTMz&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;213&quot;}},{&quot;eventTimeMs&quot;:1689265659592,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ftl&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;213&quot;}},{&quot;eventTimeMs&quot;:1689265660122,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_if&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;742&quot;}},{&quot;eventTimeMs&quot;:1689265660122,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_cms&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;743&quot;}},{&quot;eventTimeMs&quot;:1689265660123,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_cmf&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;743&quot;}},{&quot;eventTimeMs&quot;:1689265661339,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;1960&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZPqKMpDexQTWqpjoDA&quot;,&quot;clientCounter&quot;:&quot;32330&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265662340</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658231&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrVsS1wlnVg0xfkmVQp5ole3dP9ehWVJmPSGWnzMmGGpmiGplqOXJZEjW3aoEGZtfm2_BGIFHo4rjDz7iRchMM38GtnnA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Noesis_oportunidades" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-240" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEOC2rwUQpcL-EhCSy68FEKWZrwUQvbauBRC4i64FEKy3rwUQos2vBRCpxK8FEP61rwUQ6sOvBRDyqK8FEKqy_hIQs8mvBRDMrv4SEIS2rwUQ57qvBRDetq8FEIy3rwUQ65OuBRD4ta8FEMzfrgUQj8OvBRDcz68FEIvLrwUQw7f-EhCWzq8FEMy3_hIQ5LP-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265673541,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;13532&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZOyKM4-d5gT5grTwDg&quot;,&quot;clientCounter&quot;:&quot;28370&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265675552</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658241&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKp2I4m9jbl6unw8AQXAUC4lssCHuzp07gSJBkQZW36PA85pahi-T4KvjvsJ_3rsg6adtNcaOTlNd4NBYyc2x1Zz4BY0oA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-239" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEMy3_hIQqcSvBRDcz68FEMO3_hIQrLevBRCPw68FEN62rwUQ_rWvBRCMt68FEPi1rwUQvbauBRDMrv4SEOuTrgUQ8qivBRCqsv4SEMzfrgUQos2vBRClwv4SEOSz_hIQksuvBRDgtq8FELPJrwUQi8uvBRC4i64FEOe6rwUQpZmvBRCEtq8FEJbOrwUQ6sOvBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265673542,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;13532&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZKDBM_eb4dUP5L-j4Ac&quot;,&quot;clientCounter&quot;:&quot;8924&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265675555</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658252&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrXTlbkO2sN0bNTKrzVpXhoxp0ce4YeJQCJX8fzapR0YbMF9FZ4hX5Vy8XX9esfI8uOuLNEtv29BAPeTiSMZDUJMMQPrQ</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-238" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEKnErwUQzK7-EhDks_4SEI_DrwUQw7f-EhDMt_4SEIvLrwUQ4LavBRD4ta8FEN62rwUQksuvBRClma8FEKqy_hIQzN-uBRCEtq8FEIy3rwUQls6vBRCzya8FEKLNrwUQ65OuBRC4i64FEPKorwUQvbauBRD-ta8FENzPrwUQrLevBRClwv4SEOe6rwUQ6sOvBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265673537,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;14159&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZPqKMpDexQTWqpjoDA&quot;,&quot;clientCounter&quot;:&quot;32331&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265675547</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658231&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=1&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrVsS1wlnVg0xfkmVQp5ole3dP9ehWVJmPSGWnzMmGGpmiGplqOXJZEjW3aoEGZtfm2_BGIFHo4rjDz7iRchMM38GtnnA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-241" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">opportunities.noesis.pt</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/jobs</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-243" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="locale" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">locale</stringProp>
                    <stringProp name="Argument.value">pt</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">opportunities.noesis.pt</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/jobs/search</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://opportunities.noesis.pt/jobs</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://opportunities.noesis.pt</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-csrf-token" elementType="Header">
                    <stringProp name="Header.name">x-csrf-token</stringProp>
                    <stringProp name="Header.value">jjHBFBQO59Q7OhYFxxeZncH1LAQZdhYgRVDme8EvjI0OtycQEza5PXmdJdeEIBE6L8o3qhMdYQdjQ-0gdJtZhg</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-247" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="rel" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rel</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="autoplay" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">autoplay</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="controls" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">controls</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/embed/dO1p7O2NcvY</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://opportunities.noesis.pt/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-248" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">googleads.g.doubleclick.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pagead/id</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-249" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;O43z0dpjhgX20SCx4KAo&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">jnn-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.waa.v1.Waa/Create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-251" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&quot;O43z0dpjhgX20SCx4KAo&quot;,&quot;$3kE5QRxRAAbEO6h15DveX1ugdMcXclCnADkAIwj8RlOpd2p1wLUyADcOM4ILWiLCbTQjFo9TPiUdCB-ObmFWSifz1nZF7pHr1Y8siO-xaluK0cCeAAAAHM4AAAAC9AEHlgIB2dj43m5S4T_NHpVLLbEZIaG84qTtqD8HZcZCYwEdjCoMcUJjupE_8cgySlM5dDHmN9xjCiuCR-okxxuGgLmf4WjBa8-mnTFnUw-hmppoUefkebJB9JfCKmQvixlNPEv-Ch_mrzqgkMiMNqwwyCHk1MeE_AYTQA7QVdXjR9zzFlzYIlqfDBKX_NMaKfB5oLrUJxDJdFZb1_4IlUsMbuVlbe1PYIFigkK4EaPHLSOjTSHgplouhRIlhfpPSFM6RQKhphB05rf8WunlIc9tWyW26N3geccsekmz_RoyCKLF9o3-Dt72qYd3S5f0KVkzCkvT09N6XcMXzBCkY63P2pbq0zia9MzXPbjCGymYRD981YQ1-PbEnI1IfcwZSiXCGeGAnK6i5ZHP_TP5j0kQD-gHQB-OSeCnCvLmCT89ornTFEV0SZmy4mS0Tfe0gP1bBqKejEajSKVDCBTzeUEdPkOyxFYbeePoBvbHD2cwzBQeu8pkbosnB5kpiZaBebHYZ36neFzoqQZ5PzOljVPlFFn1-JCxM31bR00QzFzjxNMCCRs719yqpJ4ulhGiDaYptRK4Bik_SS70TC_EnK3UmUcPIT4OaLdcI-SWg1pHfw9NwTogW6TG2IBsrHOKFXPzsWzEojd7UVQlcMQDoUTOC-NIeXUZbsS7LqtTKkl8N7fbA22bBQFIgC5dJK5v0lkzuHq897xLv-dlIghHg1zwhIvhR9k6bpkRGz51DbhtF9LVl7FkDKwzegvulQwNavlO6PCCsWKW6DsYdrjCFQOFjf0BxT5mLjviUeizKl9i9O-3esrode_hYRQwtrHHZt0IQtLn-pmCoOoxLErvggYYDwsh3uANiwQ-NKMAcLDfUbwSEzplbjLVTqsJJ0bEZ1ikHlk3qJ6hsm9kn0nN_w5L9K6plp4h45JryrLaVUI3RaTwKoxq13OfNqQAtHA8Slbftli3RdBkF9hHJcWSgbVmFGE78ZD3muZroJIWGvtYOUiUVUNKGuUFL-2I99MhwvtRChcABYAmWY8MAN5fJ08MmWvvEjMtykL9MY51EQKAbZAkY_KCjaXF9tuGZUMmDzo-mN_6OyxBti5ue9_MjsOjii7xecaya0JYkYTjG-_B8Q&quot;]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">jnn-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.waa.v1.Waa/GenerateIT</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-252" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CJPMwKUGENzPrwUQhLavBRC4i64FEI_DrwUQzN-uBRCMt68FEOrDrwUQzK7-EhDyqK8FEIvLrwUQ4LavBRDetq8FEMy3_hIQos2vBRCWzq8FEPi1rwUQvbauBRClwv4SEJLLrwUQqrL-EhCst68FEKnErwUQ_rWvBRDnuq8FEOuTrgUQs8mvBRDDt_4SEKWZrwUQ5LP-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://opportunities.noesis.pt/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265682404,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pe&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265681595,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;srt&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265681587,&quot;latencyActionBaselined&quot;:{&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265681592,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nreqs&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265681595,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nress&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265682086,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;nrese&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265682091,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pj&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265682121,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pj&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265682092,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rsf_pej&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265682117,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;rse_pej&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265682410,&quot;latencyActionInfo&quot;:{&quot;isNavigation&quot;:true,&quot;actionType&quot;:&quot;LATENCY_ACTION_EMBED&quot;,&quot;httpProtocol&quot;:&quot;HTTP/1.1&quot;,&quot;transportProtocol&quot;:&quot;tcp&quot;,&quot;loadType&quot;:&quot;cold&quot;,&quot;resourceInfo&quot;:[{&quot;resourceCache&quot;:&quot;pj&quot;},{&quot;resourceCache&quot;:&quot;pej&quot;}],&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265682093,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265682417,&quot;latencyActionInfo&quot;:{&quot;serverTimeMs&quot;:221,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;-1&quot;}},{&quot;eventTimeMs&quot;:1689265683432,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_isc&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;5&quot;}},{&quot;eventTimeMs&quot;:1689265683433,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_ist&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6&quot;}},{&quot;eventTimeMs&quot;:1689265683434,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_csms&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;7&quot;}},{&quot;eventTimeMs&quot;:1689265683435,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_csmf&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;7&quot;}},{&quot;eventTimeMs&quot;:1689265683437,&quot;screenCreated&quot;:{&quot;csn&quot;:&quot;MC42NTgxMjk4ODYxNDY5MDI3&quot;,&quot;pageVe&quot;:{&quot;veType&quot;:16623,&quot;youtubeData&quot;:{&quot;servletData&quot;:{&quot;serializedServletEventId&quot;:&quot;EyawZLPgOcSb4dUP_dybuAs&quot;}}}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;9&quot;}},{&quot;eventTimeMs&quot;:1689265683437,&quot;latencyActionInfo&quot;:{&quot;clientScreenNonce&quot;:&quot;MC42NTgxMjk4ODYxNDY5MDI3&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;9&quot;}},{&quot;eventTimeMs&quot;:1689265683437,&quot;screenCreated&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;pageVe&quot;:{&quot;veType&quot;:32594},&quot;implicitGesture&quot;:{&quot;parentCsn&quot;:&quot;MC42NTgxMjk4ODYxNDY5MDI3&quot;,&quot;gesturedVe&quot;:{&quot;veType&quot;:16623},&quot;gestureType&quot;:&quot;INTERACTION_LOGGING_GESTURE_TYPE_AUTOMATED&quot;}},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;9&quot;}},{&quot;eventTimeMs&quot;:1689265683437,&quot;visualElementHidden&quot;:{&quot;csn&quot;:&quot;MC42NTgxMjk4ODYxNDY5MDI3&quot;,&quot;ve&quot;:{&quot;veType&quot;:16623},&quot;eventType&quot;:16},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;9&quot;}},{&quot;eventTimeMs&quot;:1689265683437,&quot;latencyActionInfo&quot;:{&quot;clientScreenNonce&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;10&quot;}},{&quot;eventTimeMs&quot;:1689265683437,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;trackingParams&quot;:&quot;CAAQru4BIhMIwKiciI2MgAMVN4-mCB0QCQhh&quot;}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;10&quot;}},{&quot;eventTimeMs&quot;:1689265683438,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;fs&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;11&quot;}},{&quot;eventTimeMs&quot;:1689265683443,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28572,&quot;veCounter&quot;:1}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;16&quot;}},{&quot;eventTimeMs&quot;:1689265683445,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ftr&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;17&quot;}},{&quot;eventTimeMs&quot;:1689265683446,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:51663,&quot;veCounter&quot;:2}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;19&quot;}},{&quot;eventTimeMs&quot;:1689265683446,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28240,&quot;veCounter&quot;:3}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;20&quot;}},{&quot;eventTimeMs&quot;:1689265683447,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28239,&quot;veCounter&quot;:4}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;20&quot;}},{&quot;eventTimeMs&quot;:1689265683447,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:28240,&quot;veCounter&quot;:3},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;20&quot;}},{&quot;eventTimeMs&quot;:1689265683447,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:28239,&quot;veCounter&quot;:4},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;20&quot;}},{&quot;eventTimeMs&quot;:1689265683447,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36925,&quot;veCounter&quot;:5}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;20&quot;}},{&quot;eventTimeMs&quot;:1689265683447,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:37220,&quot;veCounter&quot;:6}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;20&quot;}},{&quot;eventTimeMs&quot;:1689265683448,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36927,&quot;veCounter&quot;:7}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;20&quot;}},{&quot;eventTimeMs&quot;:1689265683448,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:23851,&quot;veCounter&quot;:8}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;21&quot;}},{&quot;eventTimeMs&quot;:1689265683449,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:108341,&quot;veCounter&quot;:9}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;21&quot;}},{&quot;eventTimeMs&quot;:1689265683451,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:153154,&quot;veCounter&quot;:10}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;23&quot;}},{&quot;eventTimeMs&quot;:1689265683451,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:152789,&quot;veCounter&quot;:11}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;23&quot;}},{&quot;eventTimeMs&quot;:1689265683451,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:153156,&quot;veCounter&quot;:12}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;23&quot;}},{&quot;eventTimeMs&quot;:1689265683451,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:153155,&quot;veCounter&quot;:13}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;23&quot;}},{&quot;eventTimeMs&quot;:1689265683452,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:139609,&quot;veCounter&quot;:14}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;25&quot;}},{&quot;eventTimeMs&quot;:1689265683452,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:140127,&quot;veCounter&quot;:15}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;25&quot;}},{&quot;eventTimeMs&quot;:1689265683452,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:151179,&quot;veCounter&quot;:16}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;25&quot;}},{&quot;eventTimeMs&quot;:1689265683453,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:139117,&quot;veCounter&quot;:17}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;25&quot;}},{&quot;eventTimeMs&quot;:1689265683453,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:139117,&quot;veCounter&quot;:17},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;25&quot;}},{&quot;eventTimeMs&quot;:1689265683454,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:6194,&quot;veCounter&quot;:18}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;26&quot;}},{&quot;eventTimeMs&quot;:1689265683454,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36842,&quot;veCounter&quot;:19}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;26&quot;}},{&quot;eventTimeMs&quot;:1689265683454,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:36842,&quot;veCounter&quot;:19},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;26&quot;}},{&quot;eventTimeMs&quot;:1689265683454,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:6193,&quot;veCounter&quot;:20}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;27&quot;}},{&quot;eventTimeMs&quot;:1689265683454,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28662,&quot;veCounter&quot;:21}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;27&quot;}},{&quot;eventTimeMs&quot;:1689265683456,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:127299,&quot;veCounter&quot;:22}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;28&quot;}},{&quot;eventTimeMs&quot;:1689265683456,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:127299,&quot;veCounter&quot;:22},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;28&quot;}},{&quot;eventTimeMs&quot;:1689265683456,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28663,&quot;veCounter&quot;:23}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;28&quot;}},{&quot;eventTimeMs&quot;:1689265683456,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:28663,&quot;veCounter&quot;:23},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;28&quot;}},{&quot;eventTimeMs&quot;:1689265683457,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28666,&quot;veCounter&quot;:24}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;29&quot;}},{&quot;eventTimeMs&quot;:1689265683457,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:139118,&quot;veCounter&quot;:25}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;30&quot;}},{&quot;eventTimeMs&quot;:1689265683458,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28656,&quot;veCounter&quot;:26}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;31&quot;}},{&quot;eventTimeMs&quot;:1689265683458,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:70344,&quot;veCounter&quot;:27}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;31&quot;}},{&quot;eventTimeMs&quot;:1689265683458,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:36925,&quot;veCounter&quot;:28}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;31&quot;}},{&quot;eventTimeMs&quot;:1689265683459,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:37220,&quot;veCounter&quot;:29}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;31&quot;}},{&quot;eventTimeMs&quot;:1689265683459,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:164503,&quot;veCounter&quot;:30}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;32&quot;}},{&quot;eventTimeMs&quot;:1689265683459,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28665,&quot;veCounter&quot;:31}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;32&quot;}},{&quot;eventTimeMs&quot;:1689265683460,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:28664,&quot;veCounter&quot;:32}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;32&quot;}},{&quot;eventTimeMs&quot;:1689265683460,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:86570,&quot;veCounter&quot;:33}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;33&quot;}},{&quot;eventTimeMs&quot;:1689265683460,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:16499,&quot;veCounter&quot;:34}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;33&quot;}},{&quot;eventTimeMs&quot;:1689265683460,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:23851,&quot;veCounter&quot;:8},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265683460,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:36925,&quot;veCounter&quot;:5},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265683460,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:28664,&quot;veCounter&quot;:32},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265683461,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:28665,&quot;veCounter&quot;:31},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265683461,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:139116,&quot;veCounter&quot;:35}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;34&quot;}},{&quot;eventTimeMs&quot;:1689265683466,&quot;latencyActionInfo&quot;:{&quot;clientPlaybackNonce&quot;:&quot;-jck4v9aVj2sT7Gh&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;39&quot;}},{&quot;eventTimeMs&quot;:1689265683468,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:172777,&quot;veCounter&quot;:36}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;42&quot;}},{&quot;eventTimeMs&quot;:1689265683469,&quot;visualElementAttached&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;parentVe&quot;:{&quot;veType&quot;:32594},&quot;childVes&quot;:[{&quot;veType&quot;:96714,&quot;veCounter&quot;:37}]},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;42&quot;}},{&quot;eventTimeMs&quot;:1689265683469,&quot;visualElementShown&quot;:{&quot;csn&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;,&quot;ve&quot;:{&quot;veType&quot;:96714,&quot;veCounter&quot;:37},&quot;eventType&quot;:1},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;43&quot;}},{&quot;eventTimeMs&quot;:1689265683985,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_if&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;558&quot;}},{&quot;eventTimeMs&quot;:1689265683985,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_cms&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;558&quot;}},{&quot;eventTimeMs&quot;:1689265683986,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;pot_cmf&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;560&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;EyawZLPgOcSb4dUP_dybuAs&quot;,&quot;clientCounter&quot;:&quot;18256&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/dO1p7O2NcvY?rel=0&amp;autoplay=0&amp;controls=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCiTzMClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265684468</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265682376&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=1&amp;u_h=768&amp;u_w=1366&amp;u_ah=728&amp;u_aw=1366&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-8%2C-8%2C-8%2C-8%2C1366%2C0%2C1382%2C744%2C583%2C326&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKo7Rsvai20t6_DUHeU_jLon-YLyIMNrLnSYGgj3mQh3kZuLTQv1XAUq6tIuJ8LD2cdvMqeXD2qAep2DH0pvlTJNUHztfw</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-253" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_uBBbg" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_uBBbg</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/generate_204</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/dO1p7O2NcvY?rel=0&amp;autoplay=0&amp;controls=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,*/*</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-254" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEOC2rwUQpcL-EhCSy68FEKWZrwUQvbauBRC4i64FEKy3rwUQos2vBRCpxK8FEP61rwUQ6sOvBRDyqK8FEKqy_hIQs8mvBRDMrv4SEIS2rwUQ57qvBRDetq8FEIy3rwUQ65OuBRD4ta8FEMzfrgUQj8OvBRDcz68FEIvLrwUQw7f-EhCWzq8FEMy3_hIQ5LP-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265675564,&quot;idbTransactionEnded&quot;:{&quot;objectStoreNames&quot;:&quot;LogsRequestsStore&quot;,&quot;connectionHasUnknownAbortedTransaction&quot;:false,&quot;duration&quot;:10,&quot;isSuccessful&quot;:true,&quot;tryCount&quot;:1,&quot;tag&quot;:&quot;IDB_TRANSACTION_TAG_UNKNOWN&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;15555&quot;}},{&quot;eventTimeMs&quot;:1689265679083,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;UTSn6tjzDGe_JAB7&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;19075&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZOyKM4-d5gT5grTwDg&quot;,&quot;clientCounter&quot;:&quot;28371&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265686138</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658241&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKp2I4m9jbl6unw8AQXAUC4lssCHuzp07gSJBkQZW36PA85pahi-T4KvjvsJ_3rsg6adtNcaOTlNd4NBYyc2x1Zz4BY0oA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-256" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEOC2rwUQpcL-EhCSy68FEKWZrwUQvbauBRC4i64FEKy3rwUQos2vBRCpxK8FEP61rwUQ6sOvBRDyqK8FEKqy_hIQs8mvBRDMrv4SEIS2rwUQ57qvBRDetq8FEIy3rwUQ65OuBRD4ta8FEMzfrgUQj8OvBRDcz68FEIvLrwUQw7f-EhCWzq8FEMy3_hIQ5LP-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265686364,&quot;idbTransactionEnded&quot;:{&quot;objectStoreNames&quot;:&quot;LogsRequestsStore&quot;,&quot;connectionHasUnknownAbortedTransaction&quot;:false,&quot;duration&quot;:2,&quot;isSuccessful&quot;:true,&quot;tryCount&quot;:1,&quot;tag&quot;:&quot;IDB_TRANSACTION_TAG_UNKNOWN&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;26355&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZOyKM4-d5gT5grTwDg&quot;,&quot;clientCounter&quot;:&quot;28372&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265689153</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658241&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKp2I4m9jbl6unw8AQXAUC4lssCHuzp07gSJBkQZW36PA85pahi-T4KvjvsJ_3rsg6adtNcaOTlNd4NBYyc2x1Zz4BY0oA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-255" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEKnErwUQzK7-EhDks_4SEI_DrwUQw7f-EhDMt_4SEIvLrwUQ4LavBRD4ta8FEN62rwUQksuvBRClma8FEKqy_hIQzN-uBRCEtq8FEIy3rwUQls6vBRCzya8FEKLNrwUQ65OuBRC4i64FEPKorwUQvbauBRD-ta8FENzPrwUQrLevBRClwv4SEOe6rwUQ6sOvBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265679082,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;rquKKmMEMdj983X8&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;19704&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZPqKMpDexQTWqpjoDA&quot;,&quot;clientCounter&quot;:&quot;32332&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265689150</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658231&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrVsS1wlnVg0xfkmVQp5ole3dP9ehWVJmPSGWnzMmGGpmiGplqOXJZEjW3aoEGZtfm2_BGIFHo4rjDz7iRchMM38GtnnA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-257" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEMy3_hIQqcSvBRDcz68FEMO3_hIQrLevBRCPw68FEN62rwUQ_rWvBRCMt68FEPi1rwUQvbauBRDMrv4SEOuTrgUQ8qivBRCqsv4SEMzfrgUQos2vBRClwv4SEOSz_hIQksuvBRDgtq8FELPJrwUQi8uvBRC4i64FEOe6rwUQpZmvBRCEtq8FEJbOrwUQ6sOvBQ%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265679083,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;PjPrhvZRmfOv3RsV&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;19074&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZKDBM_eb4dUP5L-j4Ac&quot;,&quot;clientCounter&quot;:&quot;8925&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/Fzdpq8mzsLc?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=3</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265689165</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658252&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKrXTlbkO2sN0bNTKrzVpXhoxp0ce4YeJQCJX8fzapR0YbMF9FZ4hX5Vy8XX9esfI8uOuLNEtv29BAPeTiSMZDUJMMQPrQ</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-258" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">x-goog-authuser</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-260" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">x-goog-authuser</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-259" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">x-goog-authuser</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-261" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;pt&quot;,null,&quot;14&quot;,null,null,[1,0,0]]],1654,[[&quot;1689265690160&quot;,null,[],null,null,null,null,&quot;[[[\&quot;/client_streamz/po/w/el\&quot;,null,[\&quot;en\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;c\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;q\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;S\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;b\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,41]],[[[\&quot;i\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;r\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,737]],[[[\&quot;C\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;x\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;m\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,1]]],null,[]],[\&quot;/client_streamz/po/w/rl\&quot;,null,[\&quot;mn\&quot;,\&quot;ac\&quot;,\&quot;sc\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[null,1],[null,0],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,427]],[[[\&quot;g\&quot;],[null,1],[null,0],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,266]]],null,[]],[\&quot;/client_streamz/po/w/csc\&quot;,null,[\&quot;cs\&quot;,\&quot;rk\&quot;],[[[[null,3],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[1]]],null,[]]]]&quot;,null,null,null,null,null,null,10800,null,null,null,null,[],1,null,null,null,null,null,[]]],&quot;1689265690160&quot;,[]]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-AuthUser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-263" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;pt&quot;,null,&quot;14&quot;,null,null,[1,0,0]]],1654,[[&quot;1689265690165&quot;,null,[],null,null,null,null,&quot;[[[\&quot;/client_streamz/po/w/el\&quot;,null,[\&quot;en\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;c\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;q\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;S\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;b\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,50]],[[[\&quot;i\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,1]],[[[\&quot;r\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,766]],[[[\&quot;C\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;x\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,1]],[[[\&quot;m\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,1]]],null,[]],[\&quot;/client_streamz/po/w/rl\&quot;,null,[\&quot;mn\&quot;,\&quot;ac\&quot;,\&quot;sc\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[null,1],[null,0],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,462]],[[[\&quot;g\&quot;],[null,1],[null,0],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,251]]],null,[]],[\&quot;/client_streamz/po/w/csc\&quot;,null,[\&quot;cs\&quot;,\&quot;rk\&quot;],[[[[null,3],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[1]]],null,[]]]]&quot;,null,null,null,null,null,null,10800,null,null,null,null,[],1,null,null,null,null,null,[]]],&quot;1689265690166&quot;,[]]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-AuthUser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-262" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;pt&quot;,null,&quot;14&quot;,null,null,[1,0,0]]],1654,[[&quot;1689265690174&quot;,null,[],null,null,null,null,&quot;[[[\&quot;/client_streamz/po/w/el\&quot;,null,[\&quot;en\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,1]],[[[\&quot;c\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;q\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;S\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,1]],[[[\&quot;b\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,41]],[[[\&quot;i\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,1]],[[[\&quot;r\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,768]],[[[\&quot;C\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;x\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]],[[[\&quot;m\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0]]],null,[]],[\&quot;/client_streamz/po/w/rl\&quot;,null,[\&quot;mn\&quot;,\&quot;ac\&quot;,\&quot;sc\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[null,1],[null,0],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,469]],[[[\&quot;g\&quot;],[null,1],[null,0],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,256]]],null,[]],[\&quot;/client_streamz/po/w/csc\&quot;,null,[\&quot;cs\&quot;,\&quot;rk\&quot;],[[[[null,3],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[1]]],null,[]]]]&quot;,null,null,null,null,null,null,10800,null,null,null,null,[],1,null,null,null,null,null,[]]],&quot;1689265690174&quot;,[]]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-AuthUser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-264" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;pt&quot;,null,null,null,null,[1,0,0]]],1828,[[&quot;1689265691168&quot;,null,[],null,null,null,null,&quot;[[[\&quot;/client_streamz/bg/fil\&quot;,null,[\&quot;rk\&quot;],[[[[\&quot;dzS90e\&quot;]],[null,43]]],null,[]]]]&quot;,null,null,null,null,null,null,10800,null,null,null,null,[],1,null,null,null,null,null,[]]],&quot;1689265691168&quot;,[]]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-AuthUser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-265" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;pt&quot;,null,null,null,null,[1,0,0]]],1828,[[&quot;1689265691169&quot;,null,[],null,null,null,null,&quot;[[[\&quot;/client_streamz/bg/fil\&quot;,null,[\&quot;rk\&quot;],[[[[\&quot;dzS90e\&quot;]],[null,115]]],null,[]]]]&quot;,null,null,null,null,null,null,10800,null,null,null,null,[],1,null,null,null,null,null,[]]],&quot;1689265691169&quot;,[]]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-AuthUser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-266" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;pt&quot;,null,null,null,null,[1,0,0]]],1828,[[&quot;1689265691183&quot;,null,[],null,null,null,null,&quot;[[[\&quot;/client_streamz/bg/fil\&quot;,null,[\&quot;rk\&quot;],[[[[\&quot;dzS90e\&quot;]],[null,100]]],null,[]]]]&quot;,null,null,null,null,null,null,10800,null,null,null,null,[],1,null,null,null,null,null,[]]],&quot;1689265691183&quot;,[]]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-AuthUser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-267" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CJPMwKUGENzPrwUQhLavBRC4i64FEI_DrwUQzN-uBRCMt68FEOrDrwUQzK7-EhDyqK8FEIvLrwUQ4LavBRDetq8FEMy3_hIQos2vBRCWzq8FEPi1rwUQvbauBRClwv4SEJLLrwUQqrL-EhCst68FEKnErwUQ_rWvBRDnuq8FEOuTrgUQs8mvBRDDt_4SEKWZrwUQ5LP-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://opportunities.noesis.pt/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265689526,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ol&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6099&quot;}},{&quot;eventTimeMs&quot;:1689265689526,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ol&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6099&quot;}},{&quot;eventTimeMs&quot;:1689265689526,&quot;foregroundHeartbeatScreenAssociated&quot;:{&quot;clientDocumentNonce&quot;:&quot;pUeQF8tm6BfKWIvm&quot;,&quot;clientScreenNonce&quot;:&quot;MC42NTgxMjk4ODYxNDY5MDI3&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6099&quot;}},{&quot;eventTimeMs&quot;:1689265689526,&quot;foregroundHeartbeatScreenAssociated&quot;:{&quot;clientDocumentNonce&quot;:&quot;pUeQF8tm6BfKWIvm&quot;,&quot;clientScreenNonce&quot;:&quot;MC4zNDc2MjUzMDY2NDEyODE4&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6099&quot;}},{&quot;eventTimeMs&quot;:1689265689526,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;ftl&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6099&quot;}},{&quot;eventTimeMs&quot;:1689265690127,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;6700&quot;}},{&quot;eventTimeMs&quot;:1689265691533,&quot;latencyActionTicked&quot;:{&quot;tickName&quot;:&quot;vc&quot;,&quot;clientActionNonce&quot;:&quot;MalftEWMBkcWyYSX&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;8105&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;EyawZLPgOcSb4dUP_dybuAs&quot;,&quot;clientCounter&quot;:&quot;18257&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/dO1p7O2NcvY?rel=0&amp;autoplay=0&amp;controls=1</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCiTzMClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265693555</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265682376&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=1&amp;u_h=768&amp;u_w=1366&amp;u_ah=728&amp;u_aw=1366&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-8%2C-8%2C-8%2C-8%2C1366%2C0%2C1382%2C744%2C583%2C326&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKo7Rsvai20t6_DUHeU_jLon-YLyIMNrLnSYGgj3mQh3kZuLTQv1XAUq6tIuJ8LD2cdvMqeXD2qAep2DH0pvlTJNUHztfw</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Noesis_oportunidades_video_youtube" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Noesis-268" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;context&quot;:{&quot;client&quot;:{&quot;hl&quot;:&quot;pt&quot;,&quot;gl&quot;:&quot;BR&quot;,&quot;clientName&quot;:56,&quot;clientVersion&quot;:&quot;1.20230709.00.00&quot;,&quot;configInfo&quot;:{&quot;appInstallData&quot;:&quot;CPvLwKUGEOC2rwUQpcL-EhCSy68FEKWZrwUQvbauBRC4i64FEKy3rwUQos2vBRCpxK8FEP61rwUQ6sOvBRDyqK8FEKqy_hIQs8mvBRDMrv4SEIS2rwUQ57qvBRDetq8FEIy3rwUQ65OuBRD4ta8FEMzfrgUQj8OvBRDcz68FEIvLrwUQw7f-EhCWzq8FEMy3_hIQ5LP-Eg%3D%3D&quot;},&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;,&quot;screenDensityFloat&quot;:&quot;0.6666666666666666&quot;},&quot;thirdParty&quot;:{&quot;embedUrl&quot;:&quot;${scheme}://${host}/&quot;}},&quot;events&quot;:[{&quot;eventTimeMs&quot;:1689265689420,&quot;idbTransactionEnded&quot;:{&quot;objectStoreNames&quot;:&quot;LogsRequestsStore&quot;,&quot;connectionHasUnknownAbortedTransaction&quot;:false,&quot;duration&quot;:1,&quot;isSuccessful&quot;:true,&quot;tryCount&quot;:1,&quot;tag&quot;:&quot;IDB_TRANSACTION_TAG_UNKNOWN&quot;},&quot;context&quot;:{&quot;lastActivityMs&quot;:&quot;29412&quot;}}],&quot;serializedClientEventId&quot;:{&quot;serializedEventId&quot;:&quot;-yWwZOyKM4-d5gT5grTwDg&quot;,&quot;clientCounter&quot;:&quot;28373&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.youtube.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/youtubei/v1/log_event?alt=json&amp;key=AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-YouTube-Client-Version" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Version</stringProp>
                    <stringProp name="Header.value">1.20230709.00.00</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com/embed/ur4Hx3PK40Y?controls=0&amp;rel=0&amp;disablekb=1&amp;showinfo=0&amp;modestbranding=0&amp;html5=1&amp;iv_load_policy=3&amp;imageQuality=hqdefault&amp;enablejsapi=1&amp;origin=${scheme}%3A%2F%2Fwww.noesis.pt&amp;widgetid=2</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Visitor-Id" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Visitor-Id</stringProp>
                    <stringProp name="Header.value">CgtQVzl2cmh2Nk92MCj7y8ClBg%3D%3D</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Time-Zone" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Time-Zone</stringProp>
                    <stringProp name="Header.value">America/Sao_Paulo</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://www.youtube.com</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Client-Name" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Client-Name</stringProp>
                    <stringProp name="Header.value">56</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Request-Time" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Request-Time</stringProp>
                    <stringProp name="Header.value">1689265700250</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Ad-Signals" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Ad-Signals</stringProp>
                    <stringProp name="Header.value">dt=1689265658241&amp;flash=0&amp;frm=2&amp;u_tz=-180&amp;u_his=6&amp;u_h=1152&amp;u_w=2049&amp;u_ah=1092&amp;u_aw=2049&amp;u_cd=24&amp;bc=31&amp;bih=-12245933&amp;biw=-12245933&amp;brdim=-12%2C-12%2C-12%2C-12%2C2049%2C0%2C2063%2C1110%2C551%2C309&amp;vis=2&amp;wgl=true&amp;ca_type=image&amp;bid=ANyPxKp2I4m9jbl6unw8AQXAUC4lssCHuzp07gSJBkQZW36PA85pahi-T4KvjvsJ_3rsg6adtNcaOTlNd4NBYyc2x1Zz4BY0oA</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-YouTube-Utc-Offset" elementType="Header">
                    <stringProp name="Header.name">X-YouTube-Utc-Offset</stringProp>
                    <stringProp name="Header.value">-180</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="Gravador" enabled="false">
        <stringProp name="ProxyControlGui.port">5678</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Noesis</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
        <stringProp name="ProxyControlGui.domains">www.noesis.pt</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
